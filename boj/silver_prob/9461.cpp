/**
 * 파도반 수열
 * 문제 설명 : 오른쪽 그림과 같이 삼각형이 나선 모양으로 놓여져 있다. 첫 삼각형은 정삼각형으로 변의 길이는 1이다.
 * 그 다음에는 다음과 같은 과정으로 정삼각형을 계속 추가한다. 나선에서 가장 긴 변의 길이를 k라 했을 때, 그 변에 길이가 k인 정삼각형을 추가한다.
 * 파도반 수열 P(N)은 나선에 있는 정삼각형의 변의 길이이다. P(1)부터 P(10)까지 첫 10개 숫자는 1, 1, 1, 2, 2, 3, 4, 5, 7, 9이다.
 * N이 주어졌을 때, P(N)을 구하는 프로그램을 작성하시오.
 *
 * 풀이 : 초기값인 1,2를 제외하고 변의 길이가 3이상인 삼각형의 길이는 직전 삼각형 i-1의 길이와 i-5번째길이의 합
 * 테이블 정의 : dp[i] = i번째 삼각형의 길이
 * 점화식 정의 : dp[i] = dp[i-1] + dp[i-5]
 *
 * 주의할 점 : 4바이트 정수의 overflow를 고려하여 더 큰 integer type을 사용
 */

#include <bits/stdc++.h>
#define uint64 uint64_t
using namespace std;

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    uint64 dp[101] = {
        0,
    };

    // 초기 값
    dp[1] = 1;
    dp[2] = 1;
    dp[3] = 1;
    dp[4] = 2;
    dp[5] = 2;

    for (int i = 6; i < 101; i++)
        dp[i] = dp[i - 1] + dp[i - 5];

    int T;
    cin >> T;
    while (T-- > 0)
    {
        uint64 N;
        cin >> N;
        cout << dp[N] << "\n";
    }

    return 0;
}